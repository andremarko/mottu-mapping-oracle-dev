-- DDL_MOTTU_MAPPING.SQL 

-- DROP ALL

DROP TABLE tb_user CASCADE CONSTRAINTS;
DROP TABLE tb_moto_yard CASCADE CONSTRAINTS;
DROP TABLE tb_sector CASCADE CONSTRAINTS;
DROP TABLE tb_model CASCADE CONSTRAINTS;
DROP TABLE tb_motorcycle CASCADE CONSTRAINTS;
DROP TABLE tb_auditoria CASCADE CONSTRAINTS;

--

CREATE TABLE tb_auditoria ( 
    audit_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    table_name VARCHAR2(100) NOT NULL, 
    operation_type VARCHAR2(10) NOT NULL, 
    username VARCHAR2(100) DEFAULT USER, 
    operation_date TIMESTAMP DEFAULT SYSTIMESTAMP, 
    old_values CLOB, 
    new_values CLOB 
);

CREATE TABLE tb_user (
    user_id NUMBER GENERATED BY DEFAULT AS IDENTITY INCREMENT BY 1 START WITH 1,
    username VARCHAR2(50) NOT NULL UNIQUE,
    pass_hash VARCHAR2(100) NOT NULL,
    role VARCHAR2(100) NOT NULL,
    CONSTRAINT pk_tb_user PRIMARY KEY (user_id)
);

CREATE TABLE tb_moto_yard (
    yard_id      NUMBER GENERATED BY DEFAULT AS IDENTITY INCREMENT BY 1 START WITH 1 NOT NULL,
    address      VARCHAR2(255) NOT NULL UNIQUE,
    branch_name  VARCHAR2(255) NOT NULL UNIQUE,
    capacity     NUMBER NOT NULL,
    city         VARCHAR2(255) NOT NULL,
    state        VARCHAR2(255) NOT NULL,
    CONSTRAINT pk_tb_moto_yard PRIMARY KEY (yard_id)
);

CREATE TABLE tb_sector (
    sector_id   NUMBER GENERATED BY DEFAULT AS IDENTITY INCREMENT BY 1 START WITH 1 NOT NULL,
    color_name  VARCHAR2(50) NOT NULL,
    color_rgb   VARCHAR2(50) NOT NULL,
    description VARCHAR2(255) NOT NULL,
    name        VARCHAR2(100) NOT NULL,
    yard_id     NUMBER NOT NULL,
    CONSTRAINT pk_tb_sector PRIMARY KEY (sector_id),
    CONSTRAINT fk_tb_sector_yard FOREIGN KEY (yard_id) REFERENCES tb_moto_yard(yard_id)
);

CREATE TABLE tb_model (
    model_id   NUMBER GENERATED BY DEFAULT AS IDENTITY INCREMENT BY 1 START WITH 1 NOT NULL,
    model_name VARCHAR2(255) NOT NULL UNIQUE,
    CONSTRAINT pk_tb_model PRIMARY KEY (model_id)
);

CREATE TABLE tb_motorcycle (
    motorcycle_id NUMBER GENERATED BY DEFAULT AS IDENTITY INCREMENT BY 1 START WITH 1 NOT NULL,
    coordinates  VARCHAR2(255) NOT NULL,
    plate        VARCHAR2(255) NOT NULL UNIQUE,
    model_id     NUMBER NOT NULL,
    sector_id    NUMBER NOT NULL,
    CONSTRAINT pk_tb_motorcycle PRIMARY KEY (motorcycle_id),
    CONSTRAINT fk_tb_motorcycle_model FOREIGN KEY (model_id) REFERENCES tb_model(model_id),
    CONSTRAINT fk_tb_motorcycle_sector FOREIGN KEY (sector_id) REFERENCES tb_sector(sector_id)
);

-- TRIGGER

CREATE OR REPLACE TRIGGER afi_auditoria_tb_motorcycle
AFTER INSERT OR UPDATE OR DELETE ON tb_motorcycle
FOR EACH ROW
DECLARE
    v_old CLOB;
    v_new CLOB;
    v_op_type VARCHAR2(10);
BEGIN
    -- OPERATION TYPE
    IF INSERTING THEN
        v_op_type := 'INSERT';
    ELSIF UPDATING THEN
        v_op_type := 'UPDATE';
    ELSIF DELETING THEN
        v_op_type := 'DELETE';
    END IF;

    -- STRING WITH OLD VALUES 
    IF DELETING OR UPDATING THEN
        v_old := 'motorcycle_id: ' || :OLD.motorcycle_id ||
                 ', plate: ' || :OLD.plate ||
                 ', coordinates: ' || :OLD.coordinates ||
                 ', model_id: ' || :OLD.model_id ||
                 ', sector_id: ' || :OLD.sector_id;
    END IF;

    -- NEW VALUES
    IF INSERTING OR UPDATING THEN
        v_new := 'motorcycle_id: ' || :NEW.motorcycle_id ||
                 ', plate: ' || :NEW.plate ||
                 ', coordinates: ' || :NEW.coordinates ||
                 ', model_id: ' || :NEW.model_id ||
                 ', sector_id: ' || :NEW.sector_id;
    END IF;

    -- INSERT NA TABELA DE AUDITORIA
    INSERT INTO TB_AUDITORIA (
        table_name,
        operation_type,
        username,
        operation_date,
        old_values,
        new_values
    ) VALUES (
        'TB_MOTORCYCLE',
        v_op_type,
        USER,
        SYSTIMESTAMP,
        v_old,
        v_new
    );
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/